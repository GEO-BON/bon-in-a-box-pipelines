name: Conda Runner

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - '*staging'
    paths:
      - '.github/workflows/docker_runner-conda.yml'
      - 'runners/conda-dockerfile'
      - 'runners/r-environment.yml'
      - 'runners/python-environment.yml'
      - 'runners/.condarc'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/runner-conda

jobs:
  runner-conda:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker, main branch
        if: github.ref == 'refs/heads/main'
        id: metadata-main
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          tags: |
            # Image used in compose file
            type=raw,value=latest
            # In case we want to replicate a specific legacy setup
            type=sha,value=${{ github.sha }}

      - name: Extract metadata (tags, labels) for Docker, staging branch
        if: github.ref != 'refs/heads/main'
        id: metadata-staging
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          tags: |
            # Image used in compose file
            type=raw,value=${{github.ref_name}}
            type=sha,value=${{ github.sha }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: runners
          file: runners/conda-dockerfile
          push: true
          tags: ${{ steps.metadata-main.outputs.tags || steps.metadata-staging.outputs.tags }}
          labels: ${{ steps.metadata-main.outputs.labels || steps.metadata-staging.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true