/**
* BON in a Box - Script service
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0.0
* Contact: jean-michel.lord@mcgill.ca
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server

import io.ktor.locations.*
import org.openapitools.server.models.*

@KtorExperimentalLocationsAPI
object Paths {
    /**
     * Get metadata about this pipeline
     * 
     * @param descriptionPath Where to find the pipeline in ./pipeline folder. 
     */
    @Location("/pipeline/{descriptionPath}/info") class getPipelineInfo(val descriptionPath: kotlin.String)

    /**
     * Get the output folders of the scripts composing this pipeline
     * 
     * @param id Where to find the pipeline in ./script folder. 
     */
    @Location("/pipeline/{id}/outputs") class getPipelineOutputs(val id: kotlin.String)

    /**
     * Get metadata about this script
     * 
     * @param scriptPath Where to find the script in ./script folder. 
     */
    @Location("/script/{scriptPath}/info") class getScriptInfo(val scriptPath: kotlin.String)

    /**
     * Get a list of available pipelines
     * 
     */
    @Location("/pipeline/list") object pipelineListGet

    /**
     * Run this pipeline
     * 
     * @param descriptionPath Where to find the script in ./script folder. 
     * @param body Content of input.json for this run (optional)
     */
    @Location("/pipeline/{descriptionPath}/run") class runPipeline(val descriptionPath: kotlin.String, val body: kotlin.String? = null)

    /**
     * Run this script
     * Run the script specified in the URL. Must include the extension.
     * @param scriptPath Where to find the script in ./script folder 
     * @param body Content of input.json for this run (optional)
     */
    @Location("/script/{scriptPath}/run") class runScript(val scriptPath: kotlin.String, val body: kotlin.String? = null)

    /**
     * Get a list of available scripts
     * 
     */
    @Location("/script/list") object scriptListGet

}
