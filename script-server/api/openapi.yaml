openapi: 3.0.1
info:
  title: BON in a Box - Script service
  contact:
    email: jean-michel.lord@mcgill.ca
  version: 1.0.0
servers:
  - url: http://localhost/
    description: script service (from outside dockers only)
  - url: http://biab-script-server:8080
    description: script service (from inside dockers only)
tags:
  - name: placeholder
    description: We could use tags
paths:
  /script/list:
    get:
      summary: Get a list of available scripts
      responses:
        "200":
          description: Array of script description files
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: ["helloWorld.yml", "runSDM.yml","SHI.yml"]
  /script/{scriptPath}/run:
    post:
      tags: []
      summary: Run this script
      description: Run the script specified in the URL. Must include the extension.
      operationId: runScript
      parameters:
        - name: scriptPath
          in: path
          description: Where to find the script in ./script folder
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/run_input_body'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/script_run_result'
        "400":
          description: Bad request
        "404":
          description: Script not found
  /script/{scriptPath}/info:
    get:
      tags: []
      summary: Get metadata about this script
      operationId: getScriptInfo
      parameters:
        - name: scriptPath
          in: path
          description: Where to find the script in ./script folder.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Returns the metadata, in JSON format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/info'
        "400":
          description: Bad request
        "404":
          description: Script not found
  /pipeline/list:
    get:
      summary: Get a list of available pipelines
      responses:
        "200":
          description: Array of pipeline description files
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: ["SHI.yml", "Folder>SDM.yml"]
  /pipeline/{descriptionPath}/info:
    get:
      tags: []
      summary: Get metadata about this pipeline
      operationId: getPipelineInfo
      parameters:
        - name: descriptionPath
          in: path
          description: Where to find the pipeline in ./pipeline folder.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Returns the metadata, in JSON format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/info'
        "400":
          description: Bad request
        "404":
          description: Pipeline not found
  /pipeline/{descriptionPath}/run:
    post:
      tags: []
      summary: Run this pipeline
      operationId: runPipeline
      parameters:
        - name: descriptionPath
          in: path
          description: Where to find the script in ./script folder.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/run_input_body'
      responses:
        "200":
          description: Returns the unique ID for this run. It corresponds to the unique output folder.
          content:
            text/plain:
              schema:
                type: string
                example: "HelloWorld/Hello World/88204814d39b762f933d67d9a3d68832"
                x-content-type: text/plain
        "400":
          description: Bad request
        "404":
          description: Pipeline not found
  /pipeline/{id}/outputs:
    get:
      tags: []
      summary: Get the output folders of the scripts composing this pipeline
      operationId: getPipelineOutputs
      parameters:
        - name: id
          in: path
          description: Where to find the pipeline in ./script folder.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: List of output folders for all the scripts
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                example:
                  id1: Folder/Script_ext/88204814d39b762f933d67d9a3d68832
                  id2: Folder/Script2/1a015dccdfb7f639ec32c278506e7c5a
        "400":
          description: Bad request
        "404":
          description: id not found
components:
  schemas:
    script_run_result:
      type: object
      properties:
        logs:
          type: string
        files:
          type: object
          additionalProperties:
            type: string
      example:
        files:
          presence: presence.tiff
          uncertainty: uncertainty.tiff
        logs: Starting... Script completed!
      xml:
        name: Result
    info:
      type: object
      properties:
        script: 
          type: string
          example: helloR.R
        description: 
          type: string
          example: This sample script shows how it works.
        external_link: 
          type: string
          example: https://github.com/GEO-BON/biab-2.0
        inputs: 
          type: object
          additionalProperties: 
            type: object
            properties: 
              description: 
                type: string
                example: scientific name of the species
              label: 
                type: string
                example: species names
              type: 
                type: string
                example: text
              options: 
                type: array
                items:
                  type: string
                example:
                - Option 1
                - Option 2
              example: 
                example: Glyptemys insculpta
                oneOf:
                - type: string
                - type: number
                - type: boolean
                - type: array
                  items:
                    oneOf:
                    - type: string
                    - type: number
                    - type: boolean
        outputs: 
          type: object
          additionalProperties: 
            type: object
            properties: 
              description: 
                type: string
                example: coordinate of occurances in 
              label: 
                type: string
                example: occurences
              type: 
                type: string
                example: text/csv
              options: 
                type: array
                items:
                  type: string
                example:
                - Option 1
                - Option 2
              example: 
                example: file.csv
                oneOf:
                - type: string
                - type: number
                - type: boolean
                - type: array
                  items:
                    oneOf:
                    - type: string
                    - type: number
                    - type: boolean
        references: 
          type: array
          items: 
            type: object
            properties: 
              text: 
                type: string
                example: Rick Bonney Expanding the Impact of Citizen Science BioScience Volume 71 Issue 5 May 2021 Pages 448â€“451
              doi: 
                type: string
                example: 10.1093/biosci/biab041
  requestBodies:
    run_input_body:
      description: Content of input.json for this run
      required: false
      content:
        text/plain:
          schema:
            type: string
            example: '{ 
              "occurence":"/output/result/from/previous/script", 
              "intensity":3
            } '
