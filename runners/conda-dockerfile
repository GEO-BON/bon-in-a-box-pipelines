FROM condaforge/miniforge3:latest
RUN userdel ubuntu; rm -r /home/ubuntu

WORKDIR /data
RUN chmod a+w /data

# Setting Time zone (necessary to install cmake, + will persist at runtime)
ENV TZ=Etc/UTC

# CMake needs to be installed in order to install R packages from github (at least it's the case for some dependency of Makurhini)
ARG DEBIAN_FRONTEND=noninteractive
RUN set -ex; \
    apt-get update; \
    apt-get install -y --no-install-recommends cmake psmisc chromium-browser; \
    apt-get clean all;

## Mamba installation
RUN mamba shell init -s bash
COPY .condarc /.condarc
RUN chmod 777 /.condarc

# Initialize mamba when logging in with bash
RUN echo 'eval "$(mamba shell hook --shell bash)"' > /.bashrc && chmod a+x /.bashrc

# Allow to read bashrc to execute mamba init when using docker exec as root
# See https://stackoverflow.com/a/74017557/3519951
RUN sed -e '/[ -z "$PS1" ] && return/s/^/#/g' -i /root/.bashrc

# Conda cache and environments folder will be replaced by a virtual volume, but we want them to be writable by the runtime user.
# Permissions cannot be defined at mount time, hence we create empty folder with the appropriate permissions.
RUN set -ex; \
    mkdir /.conda && chmod a+w /.conda; \
    mkdir /.mamba && chmod a+w /.mamba; \
    mkdir /.cache && chmod a+w /.cache; \
    mkdir /.config && chmod a+w /.config

# These will be mounted as volumes. We need to create them and set the permissions.
RUN mkdir /r-libs-user && chmod a+w /r-libs-user; \
    mkdir /conda-env-yml && chmod a+w /conda-env-yml;

# Load R base environment
ADD ./r-environment.yml /data/r-environment.yml
RUN mamba env create -f /data/r-environment.yml

## ADD CRAN PACKAGES HERE (for packages not found in anaconda.org)
RUN bash --login -c "mamba activate rbase && R -e 'install.packages(c(\"CoordinateCleaner\", \
        \"geodata\", \
        \"OpenStreetMap\"\
    ), repos=\"https://cloud.r-project.org/\")'"

## ADD GITHUB PACKAGES HERE (for packages not found in anaconda.org nor CRAN)
RUN bash --login -c "mamba activate rbase && R -e 'devtools::install_github(\"ReseauBiodiversiteQuebec/stac-catalogue\")'"
RUN bash --login -c "mamba activate rbase && R -e 'devtools::install_github(\"connectscape/Makurhini\")'"

# Load python base environment
ADD ./python-environment.yml /data/python-environment.yml
RUN mamba env create -f /data/python-environment.yml

## Save some space: Remove temp files from /opt/conda/
RUN mamba clean --all --force-pkgs-dirs -y

# Since we are using the user from the client computer to run the scripts,
# we need to create and open the permissions of a few files/directories.
RUN mkdir -p /opt/conda/pkgs; \
    chmod 777 /opt/conda/pkgs; \
    chmod 777 /opt/conda/; \
    chmod 777 /opt/conda/envs;

RUN chmod -R 777 /opt/conda/envs/rbase/lib/R/library

# Remove documentation files from /opt/conda/envs/rbase/lib/R/library
# || true at the end just makes sure that this step doesn't fail the build if none were found
RUN set -ex; \
    find /opt/conda/envs/rbase/lib/R/library -name 'help' -prune -type d | xargs -r -i -P 16 rm -r "{}" ; \
    find /opt/conda/envs/rbase/lib/R/library -name 'html' -prune -type d | xargs -r -i -P 16 rm -r "{}" ; \
    find /opt/conda/envs/rbase/lib/R/library -name 'doc' -prune -type d | xargs -r -i -P 16 rm -r "{}" || true;

RUN date +"%Y-%m-%d %R" > /version.txt
