#!/usr/bin/env python3
# Util script to delete pipeline results, or to copy/move them to another root output folder.
# Generated by Copilot and edited

import json
import os
import shutil
import sys

# --- CONFIGURATION ---
BASE_DIR = "output/"

def apply_operation(source_path, operation, dest_dir=None):
    if not os.path.exists(source_path):
        print(f"Path does not exist: {source_path}")
        return

    if operation == "delete":
        if os.path.isdir(source_path):
            shutil.rmtree(source_path)
            print(f"Deleted folder: {source_path}")
        else:
            os.remove(source_path)
            print(f"Deleted file: {source_path}")

    elif operation in ("copy", "move"):
        if not dest_dir:
            print("Destination directory required for copy/move.")
            return


        rel_source_path = source_path[len(BASE_DIR):] if source_path.startswith(BASE_DIR) else source_path
        dest_path = os.path.join(dest_dir, rel_source_path)
        if os.path.isdir(source_path):
            if os.path.exists(dest_path):
                shutil.rmtree(dest_path)

            shutil.copytree(source_path, dest_path) if operation == "copy" else shutil.move(source_path, dest_path)
            print(f"{operation.capitalize()}d folder: {source_path} -> {dest_path}")
        else:
            shutil.copy2(source_path, dest_path) if operation == "copy" else shutil.move(source_path, dest_path)
            print(f"{operation.capitalize()}d file: {source_path} -> {dest_path}")
    else:
        print(f"Unknown operation: {operation}")

def main():
    if len(sys.argv) < 2:
        print("Usage: python apply_operation.py <run folder> <delete|move|copy> [destination_output_root]")
        sys.exit(1)

    pipelineRunFolder = sys.argv[1]
    operation = sys.argv[2]
    dest_root = sys.argv[3] if len(sys.argv) > 3 else None

    with open(pipelineRunFolder + "/pipelineOutput.json", "r") as f:
        data = json.load(f)

    # Apply operation to all folder values (skip "cancelled")
    for v in data.values():
        # Single words are not paths, but flags like "cancelled"
        if (isinstance(v, str) and "/" in v):
            # Only operate if path exists and is a directory
            folder_path = os.path.join(BASE_DIR, v)
            if os.path.isdir(folder_path):
                apply_operation(os.path.join(BASE_DIR, v), operation, dest_root)

    # Apply operation to the JSON file itself
    apply_operation(pipelineRunFolder, operation, dest_root)

if __name__ == "__main__":
    main()